pipeline {
    agent any
    tools {
        nodejs 'NodeJS'
    }
    environment {
        DIRECTORY_PATH = '/var/jenkins_home'
        RECIPIENT_EMAIL = 'lianaperry022@gmail.com'
    }
    stages {
        stage('Install Dependencies') {
            steps {
                echo "Installing dependencies..."
                sh '''
                    cd website
                    npm install
                '''
            }
        }
        stage('Build') {
            steps {
                echo "Building the website..."
                sh '''
                    cd website
                    npm start &
                    sleep 5 
                '''
            }
        }
        stage('Test') {
            steps {
                echo "Running a smoke test..."
                sh '''
                cd website
                npm test -- __tests__/smoke.test.js
                '''

            }
        }
        stage('Code Quality Analysis') {
            steps {
                echo "Analyzing the code quality..."
        sh '''
            cat .codeclimate.yml
            /opt/homebrew/lib/ruby/gems/3.3.0/bin/codeclimate analyze --dev --repo-token=YOUR_TOKEN --no-docker
        '''            
        }
        }
        stage('Deploy to Staging') {
            steps {
                echo "Deploying the website to the staging environment..."
                sh 'echo "Deployment to staging completed."'
            }
        }
        stage('Release to production') {
            steps {
                echo "Releasing the website to production..."
                sh 'echo "Release to production completed."'
            }
        }
        stage('Monitoring and Alerting') {
            steps {
                echo "Setting up monitoring and alerting..."
                sh 'echo "Monitoring setup completed."'
            }
        }
    }
   post {
    always {
        echo 'Cleaning up...'
        sh '''
            pkill -f "node ./website" || true
        '''
    }
    success {
        echo 'Pipeline completed successfully!'
    }
    failure {
        echo 'Pipeline failed'
    }
}
}
