pipeline {
    agent any
    tools {
        nodejs 'NodeJS'
    }
    environment {
        DIRECTORY_PATH = '/var/jenkins_home'
        RECIPIENT_EMAIL = 'lianaperry022@gmail.com'
    }
    stages {
        stage('Install Dependencies') {
            steps {
                echo "Installing dependencies..."
                sh 'cd website && npm install --legacy-peer-deps'
            }
        }
        stage('Run ESLint') {
            steps {
                sh 'cd website && npm install eslint --save-dev'
                sh 'cd website && npx eslint . --fix'
            }
        }
        stage('Build') {
            steps {
                echo "Building the website..."
                sh 'cd website && npm start & sleep 5'
            }
        }
        stage('Test') {
            steps {
                echo "Running a smoke test..."
                sh 'cd website && npm test -- __tests__/smoke.test.js'
            }
        }
        stage('Code Quality Analysis') {
            steps {
                echo "Analyzing the code quality with ESLint..."
                sh '''
                    cd website
                    npm install eslint --save-dev || true
                    npx eslint . --fix || true
                '''
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo "Deploying the website to the staging environment..."
                sh 'cd website && docker-compose up -d --build'
            }
        }
        stage('Release to Production') {
            steps {
                echo "Releasing the application to production..."
                sh '''
                    cd website
                    gem install bundler:2.5.19 --user-install || true
                    bundle exec cap production deploy:starting
                    bundle exec cap production deploy
                    bundle exec cap production deploy:finished
                '''
            }
        }
        stage('Monitoring and Alerting') {
            steps {
                echo "Setting up monitoring and alerting..."
                sh 'echo "Monitoring setup completed."'
            }
        }
    }
    post {
        always {
            script {
                echo 'Cleaning up...'
                sh 'pkill -f "node ./website" || true'
            }
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed'
        }
    }
}
